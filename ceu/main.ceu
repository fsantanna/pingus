#include "c.ceu"

native/pre do
    ##define private public
    ##define protected public
end

native do
    ##include <assert.h>

    ##define XXX_PTR2REF(x) x
    ##define ME(tp) (((tp*)_STK_ORG)->me)

    ##define Resource__load_sprite_desc(name) Resource::load_sprite_desc(name)
    ##define ResourceModifier__Enum ResourceModifier::Enum
end
native @pure _Resource__load_sprite_desc(), _Pathname();
native @plain _Sprite, _Surface, _SpriteDescription;
native @plain _ResourceModifier__Enum;
native @pure _XXX_PTR2REF();
native @nohold _delete();

#if 0
#define XXX_NO_FIN(var,val) \
    finalize                \
        var = val;          \
    with                    \
        nothing;            \
    end
#endif

#define AWAIT_UNTIL_MYSELF(TP,EVT)             \
    do                                         \
        var TP&& abc = await EVT               \
                       until abc == &&this.me; \
    end

#include "pingus/actions/basher.ceu"
#include "pingus/actions/blocker.ceu"
#include "pingus/actions/bomber.ceu"
#include "pingus/actions/digger.ceu"
#include "pingus/actions/drown.ceu"
#include "pingus/actions/faller.ceu"
#include "pingus/actions/floater.ceu"
#include "pingus/actions/jumper.ceu"
#include "engine/display/sprite.ceu"
#include "pingus/actions/waiter.ceu"

input int SDL_DT;

_printf("[CEU] Hello World!\n");

par/and do
    await 1s;
with
    await SDL_DT;
end

_printf("[CEU] Good Bye!\n");

await FOREVER;
