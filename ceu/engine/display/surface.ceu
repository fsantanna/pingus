#ifndef _SURFACE_CEU
#define _SURFACE_CEU

native/plain _Sprite, _Surface, _SpriteDescription, _GraphicContextState;
native/plain _SpriteDescription_ptr;
native/pre do
    ##include "engine/display/display.hpp"
    ##include "engine/display/framebuffer.hpp"
    ##include "engine/display/sdl_framebuffer_surface_impl.hpp"
    ##include "engine/display/sprite_description.hpp"
    ##define loop_ loop
    typedef SpriteDescription* SpriteDescription_ptr;
end

data Surface with
    var& _FramebufferSurface    framebuffer;
    var& _SpriteDescription_ptr desc;
end

#if 0
code/await Surface_from_sdl (var _Surface&& sdl) ->
                                (var& Surface surface) ->
                                    FOREVER
do
    var&? _FramebufferSurface framebuffer =
        &{new FramebufferSurface}({new SDLFramebufferSurfaceImpl}(sdl:get_surface()))
            finalize (framebuffer) with
                _delete(&&framebuffer!);
            end;

    var Surface surface_ = val Surface(&framebuffer!);
    surface = &surface_;

    await FOREVER;
end
#endif

code/await Surface_from_desc (var _SpriteDescription_ptr   desc,
                              var _ResourceModifier__Enum? mod)
                                -> (var& Surface surface)
                                    -> FOREVER
do
    var _ResourceModifier__Enum mod_;
    if mod? then
        mod_ = mod!;
    else
        mod_ = {ResourceModifier::ROT0};
    end

    var&? _FramebufferSurface framebuffer =
        &_load_framebuffer_sdl_surface(desc:filename, mod_)
            finalize (framebuffer) with
                _delete(&&framebuffer!);
            end;

    var Surface surface_ = val Surface(&framebuffer!, &desc);
    surface = &surface_;

    await FOREVER;
end

code/await Surface_from_name (var _char_const_ptr name,
                              var _ResourceModifier__Enum? mod)
                                -> (var& Surface surface)
                                    -> FOREVER
do
    var _SpriteDescription_ptr desc = _Resource__load_sprite_desc(name);
    if desc == null then
        desc = _Resource__load_sprite_desc("core/misc/404");
    end
    _assert(desc != null);

    await Surface_from_desc(desc,mod) -> (&surface);
end

#endif
