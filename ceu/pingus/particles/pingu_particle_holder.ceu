#ifndef _PINGU_PARTICLE_HOLDER
#define _PINGU_PARTICLE_HOLDER

#define x_collision_decrease 0.3
#define y_collision_decrease 0.6

#include "../../engine/display/sprite.ceu"

class PinguParticle with
    var float x, y;
do
    var int livetime = (50 + _rand()%75);
    var Vector3f velocity = Vector3f({Math::frand}() * 7 - 3.5,
                                     {Math::frand}() * -9,
                                     0);

    var Rect r = Rect(x,y, 0,0);
    var Sprite _ = Sprite.build_name(&r, "particles/pingu_explo");

    loop i in this.livetime do
        await WORLD_UPDATE;

        var float tmp_x_add = 0.0;
        var float tmp_y_add = 0.0;

        // Simulated gravity
        this.velocity.y = this.velocity.y + global:gravity;

        if (this.velocity.y > 0) then
            tmp_y_add = this.velocity.y;
            loop do
                if tmp_y_add < 1.0 then
                    break;
                end
                if (global:world!:get_colmap():getpixel((int)(this.x), (int)(this.y))) then
                    this.velocity.y = this.velocity.y * -y_collision_decrease;
                    tmp_y_add = -tmp_y_add;
                    this.y = this.y - 1;
                    break;
                end
                this.y = this.y + 1;
                tmp_y_add = tmp_y_add - 1;
            end
            this.y = this.y + tmp_y_add;
        else
            tmp_y_add = this.velocity.y;
            loop do
                if tmp_y_add > -1.0 then
                    break;
                end
                if (global:world!:get_colmap():getpixel((int)(this.x), (int)(this.y))) then
                    this.velocity.y = this.velocity.y * -y_collision_decrease;
                    tmp_y_add = -tmp_y_add;
                    this.y = this.y + 1;
                    break;
                end
                this.y = this.y - 1;
                tmp_y_add = tmp_y_add + 1;
            end
            this.y = this.y + tmp_y_add;
        end

        if (this.velocity.x > 0) then
            tmp_x_add = this.velocity.x;
            loop do
                if tmp_x_add < 1.0 then
                    break;
                end
                if (global:world!:get_colmap():getpixel((int)(this.x), (int)(this.y))) then
                    this.velocity.x = this.velocity.x * -x_collision_decrease;
                    tmp_x_add = -tmp_x_add;
                    this.x = this.x - 1;
                    break;
                end
                this.x = this.x + 1;
                tmp_x_add = tmp_x_add - 1;
            end
            this.x = this.x + tmp_x_add;
        else
            tmp_x_add = this.velocity.x;
            loop do
                if tmp_x_add > -1.0 then
                    break;
                end
                if (global:world!:get_colmap():getpixel((int)(this.x), (int)(this.y))) then
                    this.velocity.x = this.velocity.x * -x_collision_decrease;
                    tmp_x_add = -tmp_x_add;
                    this.x = this.x + 1;
                    break;
                end
                this.x = this.x - 1;
                tmp_x_add = tmp_x_add + 1;
            end
            this.x = this.x + tmp_x_add;
        end
    end
end

#undef x_collision_decrease
#undef y_collision_decrease

#endif
