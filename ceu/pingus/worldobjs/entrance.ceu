#ifndef _ENTRANCE_CEU
#define _ENTRANCE_CEU

native/pre do
    ##include "src/pingus/worldobjs/entrance.hpp"
    ##define WorldObjs__Entrance WorldObjs::Entrance
end
native @plain _WorldObjs__Entrance;

input _WorldObjs__Entrance&& ENTRANCE_NEW;
input _WorldObjs__Entrance&& ENTRANCE_DELETE;

class Entrance with
    var _WorldObjs__Entrance& me;
do
    par/or do
        AWAIT_UNTIL_MYSELF(_WorldObjs__Entrance,ENTRANCE_DELETE);
    with
        var int last_release = 150 - this.me.release_rate;
            // wait ~2sec at startup to allow a 'lets go' sound

        var bool last_was_right = false;

        loop do
            await WORLD_UPDATE
            until this.me.world:get_time() >= last_release+this.me.release_rate;
            last_release = this.me.world:get_time();

            if this.me.world:check_armageddon() then
                break;
            end

            var _Pingu&& pingu_ = _XXX_PURE(
                this.me.world:get_pingus():create_pingu(
                    this.me.pos,
                    this.me.owner_id));
            if pingu_ == null then
                continue;
            end

            var IPingu&& pingu = (IPingu&&)pingu_:ceu;
            {
                Direction d;
            };
            if this.me.direction == {WorldObjs::Entrance::LEFT} then
                _d.left();
            else/if this.me.direction == {WorldObjs::Entrance::RIGHT}  then
                _d.right();
            else/if this.me.direction == {WorldObjs::Entrance::MISC} then
                if last_was_right then
                    _d.left();
                else
                    _d.right();
                end
                last_was_right = not last_was_right;
            else
                _log_error("warning direction is wrong: %1%", this.me.direction);
                _d.right();
            end
            pingu:set_direction(_d);
        end
    end
end

class EntranceFactory with
do
    every me_ in ENTRANCE_NEW do
        spawn Entrance with
            this.me = &_XXX_PTR2REF(me_);
        end;
    end
end

var EntranceFactory _;

#endif
