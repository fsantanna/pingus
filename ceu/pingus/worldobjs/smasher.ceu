#ifndef _SMASHER_CEU
#define _SMASHER_CEU

class Smasher with
    pool IPingu[]& pingus;
    var _FileReader&& reader;

    function (void)       =>float     get_z_pos;
    function (_Vector3f&&)=>void      set_pos;
    function (void)       =>_Vector3f get_pos;
do
    var Vector3f pos;
    { static Vector3f p; };
    this.reader:read_vector("position", _p);
    this.pos = Vector3f(_p.x,_p.y,_p.z);

    do
        _log_info("Drawing colmap entry");
        { CollisionMask buf("traps/smasher_cmap"); };
        global:world!:put(&&_buf,
                          (int)(this.pos.x),
                          (int)(this.pos.y),
                          {Groundtype::GP_SOLID});
    end

    var Rect r = Rect(pos.x,pos.y, 0,0);
    loop do
        var int ok = do
            var SpriteR sprite = SpriteR.build_name(&r, "traps/smasher");
            _assert(sprite.get_frame_count() == 6);
            sprite.frame_delay = 0;

            loop do
                await WORLD_UPDATE;

                loop pingu in this.pingus do
                    // Activate the smasher if a Pingu is under it
                    if ((pingu:direction == _LEFT             and
                         pingu:get_pos().x > this.pos.x + 65  and
                         pingu:get_pos().x < this.pos.x + 85)
                    or
                        (pingu:direction == _RIGHT            and
                         pingu:get_pos().x > this.pos.x + 190 and
                         pingu:get_pos().x < this.pos.x + 210))
                    then
                        if (pingu:current_action != {ActionName::SPLASHED}) then
                            escape 1;
                        end
                    end
                end
            end
        end;

        do
            var SpriteR sprite = SpriteR.build_name(&r, "traps/smasher");

            loop i in 6 do
                await WORLD_UPDATE;
                sprite.set_frame(i);
            end

            // SMASH!!! The thing hitten earth and kills the pingus
            call {Sound::PingusSound::play_sound}("tenton");

            loop i in 20 do
                emit global:go_create_smoke_particles => (
                        this.pos.x + 20 + _float(_rand() % 260),
                        this.pos.y + 180,
                        {Math::frand()-0.5f},
                        {Math::frand()-0.5f}
                );
            end

            var IPingu&&?[] pingus;
            loop pingu in this.pingus do
                pingus = [] .. pingus .. [pingu];
            end
            loop i in $pingus do
                var IPingu&&? pingu = pingus[i]!;
                if pingu!:is_inside((int)(this.pos.x + 30),
                                    (int)(this.pos.y + 90),
                                    (int)(this.pos.x + 250),
                                    (int)(this.pos.y + 190))
                then
                    emit pingu!:go_action => {ActionName::SPLASHED};
                end
            end

            loop i in 6 do
                await WORLD_UPDATE;
                sprite.set_frame(5-i);
            end
        end
    end

    /* PUBLIC */

    function (void)=>float get_z_pos do
        return this.pos.z;
    end
    function (_Vector3f&& p)=>void set_pos do
        this.pos = Vector3f(p:x, p:y, p:z);
    end
    function (void)=>_Vector3f get_pos do
        return _Vector3f(this.pos.x, this.pos.y, this.pos.z);
    end
end

#endif
