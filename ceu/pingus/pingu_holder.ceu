#ifndef _PINGUHOLDER_CEU
#define _PINGUHOLDER_CEU

native do
    ##include "../src/pingus/pingu_holder.hpp"
end
native @plain _PinguHolder;

input (int,int,_Framebuffer&&) PINGUHOLDER_RENDER;

input (void&& &&,int,_Vector3f&&,int) PINGUHOLDER_CREATE_PINGU;

input int&& PINGUHOLDER_GET_NUMBER_OF_EXITED;
input int&& PINGUHOLDER_GET_NUMBER_OF_KILLED;
input int&& PINGUHOLDER_GET_NUMBER_OF_ALIVE;
input int&& PINGUHOLDER_GET_NUMBER_OF_RELEASED;
input int&& PINGUHOLDER_GET_NUMBER_OF_ALLOWED;

#include "pingu.ceu"

class PinguHolder with
    interface IPinguHolderStatus;
    var int number_of_exited   = 0;
    var int number_of_killed   = 0;
    var int number_of_alive    = 0;
    var int number_of_released = 0;
    var int number_of_allowed;//=0;

    pool IPingu[] pingus;
    var _PinguHolder& me;
do
    this.me.ceu = &&this;

    par do
        every (me_,id,pos,owner_id) in PINGUHOLDER_CREATE_PINGU do
            if this.number_of_released < this.number_of_allowed then
                spawn Pingu in this.pingus with
                    this.holder   = &outer;
                    this.id       = id;
                    this.owner_id = owner_id;
                    this.pos_x    = pos:x;
                    this.pos_y    = pos:y;
                    *me_ = (void&&)&&this;
                    outer.number_of_released = outer.number_of_released + 1;
                    outer.number_of_alive    = outer.number_of_alive    + 1;
                end;
            end
        end
    with
        every status in this.ok_pingu do
            if status == _PS_DEAD then
//_assert(0);
                this.number_of_killed = this.number_of_killed + 1;
            else/if status == _PS_EXITED then
                this.number_of_exited = this.number_of_exited + 1;
            else
                _assert(status != _PS_ALIVE);
            end
            this.number_of_alive = this.number_of_alive - 1;
            _assert(this.number_of_released == this.number_of_alive  +
                                               this.number_of_killed +
                                               this.number_of_exited);
        end
    end
end

#endif
