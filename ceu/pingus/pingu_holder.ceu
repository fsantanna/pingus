#ifndef _PINGUHOLDER_CEU
#define _PINGUHOLDER_CEU

#include "pingu.ceu"

class PinguHolder with
    interface IPinguHolder;
    interface IPinguHolderStatus;
    var int number_of_exited   = 0;
    var int number_of_killed   = 0;
    var int number_of_alive    = 0;
    var int number_of_released = 0;
    var int number_of_allowed;//=0;
    function (int number_of_allowed)=>PinguHolder build;
do
    function (int number_of_allowed)=>PinguHolder build do
        this.number_of_allowed = number_of_allowed;
    end

    par do
        var int id_total = 0;
        every (x_,y_,dir_,owner_id_) in this.create do
            if this.number_of_released < this.number_of_allowed then
                id_total = id_total+1;
                this.number_of_released = this.number_of_released + 1;
                this.number_of_alive    = this.number_of_alive    + 1;
                spawn Pingu in this.pingus with
                    this.holder    = &outer;
                    this.id        = id_total;
                    this.owner_id  = owner_id_;
                    this.pos_x     = x_;
                    this.pos_y     = y_;
                    this.direction = dir_;
                end;
            end
        end
    with
        every status in this.ok_pingu do
            if status == _PS_DEAD then
//_assert(0);
                this.number_of_killed = this.number_of_killed + 1;
            else/if status == _PS_EXITED then
                this.number_of_exited = this.number_of_exited + 1;
            else
                _assert(status != _PS_ALIVE);
            end
            this.number_of_alive = this.number_of_alive - 1;
            _assert(this.number_of_released == this.number_of_alive  +
                                               this.number_of_killed +
                                               this.number_of_exited);
        end
    end
end

#endif
