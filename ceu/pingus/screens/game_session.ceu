#ifndef _GAMESESSION_CEU
#define _GAMESESSION_CEU

input _PingusLevel&& GAMESESSION_NEW;

interface IScreen with
    function (void)=>_GraphicContextState& get_state;
    function (void)=>_SceneContext& get_scene_context;
end

#include "../world.ceu"

class GameSession with
    interface IScreen;
    var _PingusLevel&& plf;
do
    var int width  = this.plf:get_size().width;
    var int height = this.plf:get_size().height;

    var _GraphicContextState&? state;
    finalize
        state = &{new GraphicContextState}(
                    {Math::min}({Display::get_width()},  width),
                    {Math::min}({Display::get_height()}, height));
    with
        _delete(&&state!);
    end
    this.state!.set_limit(_Rect(_Vector2i(0,0), _Size(width, height)));
    _GLOBAL_WORLD_STATE = _XXX_PURE(&&this.state!);

    var _SceneContext&? scene_context;
    finalize
        scene_context = &{new SceneContext}(
            {Rect}(
                {Vector2i}(
                    {Math::max}(
                        ({Display::get_width()}-width)/2,
                        0),
                    {Math::max}(
                        ({Display::get_height()}-height)/2,
                        0)
                ),
                {Size}(
                    {Math::min}({Display::get_width()},  width),
                    {Math::min}({Display::get_height()}, height))));
    with
        _delete(&&scene_context!);
    end
    _GLOBAL_WORLD_SCENE_CONTEXT = _XXX_PURE(&&this.scene_context!);

    _GLOBAL_PLAYFIELD = _XXX_PURE({new Playfield}(_GLOBAL_SERVER, _GLOBAL_SESSION,
            {Rect}(
                {Vector2i}(
                    {Math::max}(
                        ({Display::get_width()}-width)/2,
                        0),
                    {Math::max}(
                        ({Display::get_height()}-height)/2,
                        0)
                ),
                {Size}(
                    {Math::min}({Display::get_width()},  width),
                    {Math::min}({Display::get_height()}, height)))));

    var World _ with
        this.plf    = plf;
        this.screen = &outer;
    end;

    await FOREVER;

    function (void)=>_GraphicContextState& get_state do
        return &this.state!;
    end
    function (void)=>_SceneContext& get_scene_context do
        return &this.scene_context!;
    end
end

spawn do
    every plf_ in GAMESESSION_NEW do
        spawn GameSession with
            this.plf = plf_;
        end;
    end
end

#endif
