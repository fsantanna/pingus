#ifndef _GAME_SESSION
#define _GAME_SESSION

class GameSession with
do
    var bool is_paused         = false;
    var bool is_fast_forwarded = false;

    par do
        every dt in SCREENMANAGER_UPDATE do
            if _GLOBAL_SERVER:is_finished() then
                _GLOBAL_SESSION:update_server(dt);
            else
                // how much time we have to account for while doing world updates
                var int time_passed = dt*1000 + _GLOBAL_SESSION:world_delay;
                // how much time each world update represents
                var int update_time = {globals::game_speed};

                // update the world (and the objects in it) in constant steps 
                // to account for the time the previous frame took

                // invariant: world_updates - the number of times the world
                // has been updated during this frame
                var int world_updates = 0;

                loop do
                    if ((world_updates+1)*update_time > time_passed) then
                        break;
                    end
                    if (not is_paused) or _GLOBAL_SESSION:single_step then
                        _GLOBAL_SESSION:single_step = false;
                        if is_fast_forwarded then
                            loop i in {globals::fast_forward_time_scale} do
                                _GLOBAL_SERVER:update();
                            end
                        else
                            _GLOBAL_SERVER:update();
                        end
                    end
                    world_updates = world_updates + 1;
                end
                // save how far behind is the world compared to the actual time
                // so that we can account for that while updating in the next frame
                _GLOBAL_SESSION:world_delay = time_passed - (world_updates*update_time);
            end
        end
    with
        every e in ON_INPUT_EVENT do
            if e:type != {Input::BUTTON_EVENT_TYPE} then
                continue;
            end

            var _Input__ButtonEvent&& but = &&e:button;
            if but:state == {Input::BUTTON_PRESSED} then
                if but:name == {Input::PAUSE_BUTTON} then
                    emit global:go_pause_toggle;
                else/if but:name == {Input::SINGLE_STEP_BUTTON} then
                    if not is_paused then
                        emit global:go_pause_toggle;
                    end
                    _GLOBAL_SESSION:single_step = true;
                else/if but:name == {Input::FAST_FORWARD_BUTTON} then
                    emit global:go_forward => true;
                else/if but:name == {Input::ARMAGEDDON_BUTTON} then
                    emit global:go_armageddon;
                else/if but:name == {Input::ESCAPE_BUTTON} then
                    _GLOBAL_SERVER:send_finish_event();
                end
            else
                _assert(but:state == {Input::BUTTON_RELEASED});
                if but:name == {Input::FAST_FORWARD_BUTTON} then
                    emit global:go_forward => false;
                end
            end
        end
    with
        every global:go_pause_toggle do
            is_paused = not is_paused;
            emit global:go_forward => false;
        end
    with
        every v in global:go_forward do
            is_fast_forwarded = v;
            if v==true and is_paused then
                emit global:go_pause_toggle;
            end
        end
    end
end

spawn do
    every WORLD_NEW do
        spawn GameSession;
    end
end

#endif
