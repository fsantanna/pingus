#ifdef _GUILLOTINE_CEU
#error multiple include
#else
#define _GUILLOTINE_CEU

code/await Guillotine (void) -> FOREVER
do
    {
        static Vector3f p;
        WORLDOBJ_FACTORY_READER.read_vector("position", p);
    }
    var Vector2i pst = val Vector2i({p.x},{p.y});

    var& RRect r = spawn RRect(IRRect(Rect(pst.x,pst.y,_,_),
                                      AnchorXY(AnchorX.Left(), AnchorY.Top()),
                                      &outer.game.offset,
                                      AnchorXY(AnchorX.Center(), AnchorY.Center()),
                                      _, _));
    loop do
        spawn Sprite_from_name(&r.pub, "traps/guillotineidle", &outer.game.dt);

        var s8 dir = do
            loop do
                await outer.game.dt;
                var&? Pingu p;
                loop p in outer.pingus do
                    if call p!.Pingu_Is_Inside(pst.x+38, pst.y+90, pst.x+42, pst.y+98) then
                        var s8 dir = p!.pingu.direction;
                        emit p!.pingu.go_action({ActionName::DEAD});
                        escape dir;
                    end
                end
            end
        end;

        do
            var _char&& name = do
                if dir == {LEFT} then
                    escape "traps/guillotinekill/left";
                else
                    escape "traps/guillotinekill/right";
                end
            end;
            var&? Sprite_from_name s = spawn Sprite_from_name(&r.pub, name, &outer.game.dt);
            watching s do
                every outer.game.dt do
                    if s!.sprite.frame == 7 then
#if 0
                        {
                            static Vector3f pst;
                            pst.x = THIS(CEU_Guillotine)->pst.x;
                            pst.y = THIS(CEU_Guillotine)->pst.y;
                            pst.z = THIS(CEU_Guillotine)->pst.z;
                        };
                        //global:world!:play_sound("splash", _pos, 0.5);
#endif
                        call {Sound::PingusSound::play_sound}("splash", 0.5, 0.0);
                    end
                end
            end
        end
    end

    /* PUBLIC */
#if 0
    function (void)=>float get_z_pos do
        return this.pst.z;
    end
    function (_Vector3f&& p)=>void set_pos do
        this.pst = Vector3f(p:x, p:y, p:z);
    end
    function (void)=>_Vector3f get_pos do
        return _Vector3f(this.pst.x, this.pst.y, this.pst.z);
    end
#endif
end

#endif
