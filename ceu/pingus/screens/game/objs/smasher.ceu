#ifdef _SMASHER_CEU
#error multiple include
#else
#define _SMASHER_CEU

code/await Smasher (void) -> FOREVER
do
    {
        static Vector3f p;
        WORLDOBJ_FACTORY_READER.read_vector("position", p);
    }
    var Vector2i pst = val Vector2i({p.x}, {p.y});
    do
        _log_info("Drawing colmap entry");
        {
            DO
                CollisionMask buf("traps/smasher_cmap");
        }
        call Game_Put({&buf}, pst.x, pst.y, {Groundtype::GP_SOLID});
        {
            END
        }
    end

    var Rect rect = val Rect(pst.x,pst.y, 0,0);
    loop do
        var int ok = do
            var&? Sprite_from_name sprite =
                spawn Sprite_from_name(&rect,"traps/smasher",&outer.game.dt, true);
            _ceu_dbg_assert(call Get_Frame_Count(&sprite!.sprite) == 6);
            sprite!.sprite.frame_delay = 0;

            loop do
                await outer.game.dt;

                var&? Pingu pingu;
                loop pingu in outer.pingus do
                    // Activate the smasher if a Pingu is under it
                    if ((pingu!.pingu.direction == {LEFT}    and
                         pingu!.pingu.rect.left > pst.x + 65 and
                         pingu!.pingu.rect.left < pst.x + 85)
                    or
                        (pingu!.pingu.direction == {RIGHT}    and
                         pingu!.pingu.rect.left > pst.x + 190 and
                         pingu!.pingu.rect.left < pst.x + 210))
                    then
                        if (pingu!.pingu.current_action != {ActionName::SPLASHED}) then
                            escape 1;
                        end
                    end
                end
            end
        end;

        do
            var&? Sprite_from_name sprite =
                spawn Sprite_from_name(&rect,"traps/smasher",&outer.game.dt, true);

            do
                var int i;
                loop i in [0 -> 6[ do
                    await outer.game.dt;
                    sprite!.sprite.frame = i;
                end
            end

            // SMASH!!! The thing hitten earth and kills the pingus
            call {Sound::PingusSound::play_sound}("tenton");

            do
                var int i;
                loop i in [0 -> 20[ do
                    spawn SmokeParticle(pst.x + 20 + (_rand() % 260),
                                        pst.y + 180,
                                        {Math::frand()-0.5f},
                                        {Math::frand()-0.5f})
                            in outer.smoke_particles;
                end
            end

            var&? Pingu pingu;
            loop pingu in outer.pingus do
                if (call pingu!.Is_Inside((pst.x +  30),
                                          (pst.y +  90),
                                          (pst.x + 250),
                                          (pst.y + 190)))
                then
                    emit pingu!.pingu.go_action({ActionName::SPLASHED});
                end
            end

            do
                var int i;
                loop i in [0 <- 5] do
                    await outer.game.dt;
                    sprite!.sprite.frame = i;
                end
            end
        end
    end

    /* PUBLIC */

#if 0
    function (void)=>float get_z_pos do
        return this.pos.z;
    end
    function (_Vector3f&& p)=>void set_pos do
        this.pos = Vector3f(p:x, p:y, p:z);
    end
    function (void)=>_Vector3f get_pos do
        return _Vector3f(this.pos.x, this.pos.y, this.pos.z);
    end
#endif
end

#endif
