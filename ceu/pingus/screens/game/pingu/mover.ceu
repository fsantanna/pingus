#ifdef _LINEARMOVER_CEU
#error multiple include
#else
#define _LINEARMOVER_CEU

code/await Mover (void) -> (event& void ok_collided) -> FOREVER
do
    event void ok_collided_;
    ok_collided = &ok_collided_;

    every WORLD_UPDATE do
        var bool collided = false;

        var Vector3f pst = _;

        // enclosing block for the C++ declarations
        {{
            Vector3f pst, move;
            pst.x = @(outer.pingu.rect.left);
            pst.y = @(outer.pingu.rect.top);

            move = Vector3f(@outer.pingu.velocity.x,@outer.pingu.velocity.y,@outer.pingu.velocity.z);

            Vector3f target_pos = pst + move;
            Vector3f step_vector = move;

            // Static cast to stop warning
            int move_length = (int)(move.length());

            // Make the step vector (i.e. change to a unit vector)
            step_vector.normalize();

            // Move to the destination one unit vector at a time
            for (int i=0; i<move_length; i++) {
                @collided = Colliders::PinguCollider()(@outer.gfx_map.get_colmap(), pst, step_vector);
                pst = pst + step_vector;
                if (@collided) {
                    break;
                }
            }

            // If on a collision pixel, back away from it.
            if (@collided) {
                pst = pst - step_vector;
            }

            @pst.x = pst.x;
            @pst.y = pst.y;
            @pst.z = pst.z;
        }};

        outer.pingu.rect.left = pst.x as int;
        outer.pingu.rect.top  = pst.y as int;

        if collided then
            emit ok_collided_;
        end
    end
end

#endif
