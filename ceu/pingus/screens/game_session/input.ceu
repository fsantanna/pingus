var bool is_paused         = false;
var bool is_fast_forwarded = false;
var bool do_single_step    = false;

par do
    var int world_delay = 0; // the world is initially on time
    loop do
        var int dt = await SDL_DT;
        // how much time we have to account for while doing world updates
        var int time_passed = dt + world_delay;
        // how much time each world update represents
        var int update_time = {globals::game_speed};

        // update the world (and the objects in it) in constant steps 
        // to account for the time the previous frame took

        // invariant: world_updates - the number of times the world
        // has been updated during this frame
        var int world_updates = 0;

        loop do
            if ((world_updates+1)*update_time > time_passed) then
                break;
            end
            if (not is_paused) or do_single_step then
                do_single_step = false;
                if is_fast_forwarded then
                    var int i;
                    loop i in [0 -> {globals::fast_forward_time_scale}[ do
                        await async do
                            emit WORLD_UPDATE;
                        end
                    end
                else
                    await async do
                        emit WORLD_UPDATE;
                    end
                end
            end
            world_updates = world_updates + 1;
        end
        // save how far behind is the world compared to the actual time
        // so that we can account for that while updating in the next frame
        world_delay = time_passed - (world_updates*update_time);
    end
with
    loop do
        var _Input__ButtonEvent&& but = await ON_BUTTON_PRESSED;
        if but:name == {Input::PAUSE_BUTTON} then
            emit outer.main.go_pause_toggle;
        else/if but:name == {Input::SINGLE_STEP_BUTTON} then
            if not is_paused then
                emit outer.main.go_pause_toggle;
            end
            do_single_step = true;
        else/if but:name == {Input::FAST_FORWARD_BUTTON} then
            emit outer.main.go_forward(true);
        else/if but:name == {Input::ARMAGEDDON_BUTTON} then
            emit outer.game_session.go_armageddon;
        else/if but:name == {Input::ESCAPE_BUTTON} then
            break;
        end
    end
with
    var _Input__ButtonEvent&& but;
    every but in ON_BUTTON_RELEASED do
        if but:name == {Input::FAST_FORWARD_BUTTON} then
            emit outer.main.go_forward(false);
        end
    end
with
    every outer.main.go_pause_toggle do
        is_paused = not is_paused;
        emit outer.main.go_forward(false);
    end
with
    var bool v;
    every v in outer.main.go_forward do
        is_fast_forwarded = v;
        if v==true and is_paused then
            emit outer.main.go_pause_toggle;
        end
    end
end
