#ifndef _ACTIONBUTTON_CEU
#define _ACTIONBUTTON_CEU

#include "engine/gui/rect_component.ceu"

code/await ArmageddonButton (var int x, var int y) -> FOREVER
do
    var Rect rect = val Rect(x, y, 38, 60);

    var& IRectComponent component;
    spawn RectComponent(&rect) -> (&component);

    spawn Sprite_from_name(&rect, "core/buttons/hbuttonbgb", false);

    do
        var&? ISprite s;
        spawn Sprite_from_name(&rect, "core/buttons/armageddon_anim", false)
                -> (&s);
        s!.frame_delay = 0;
        s!.frame = 7;

        loop do
            await component.on_primary_button_pressed;
            watching 1s do
                await component.on_primary_button_pressed;
                break;
            end
        end
    end

    do
        spawn Sprite_from_name(&rect, "core/buttons/armageddon_anim", false);
        emit outer.main.go_armageddon;
        await FOREVER;
    end
end

code/await ForwardButton (var int x, var int y) -> FOREVER
do
    var Rect rect = val Rect(x,y, 38,60);

    var& IRectComponent component;
    spawn RectComponent(&rect) -> (&component);

    spawn do
        loop do
            do
                spawn Sprite_from_name(&rect, "core/buttons/hbuttonbgb", false);
                par/or do
                    var bool v = await outer.main.go_forward until v;
                with
                    await component.on_primary_button_pressed;
                    emit outer.main.go_forward(true);
                end
            end
            do
                spawn Sprite_from_name(&rect, "core/buttons/hbuttonbg", false);
                par/or do
                    var bool v = await outer.main.go_forward until (not v);
                with
                    await component.on_primary_button_released;
                    emit outer.main.go_forward(false);
                end
            end
        end
    end

    spawn Sprite_from_name(&rect, "core/buttons/fast_forward", false);
    await FOREVER;
end

code/await PauseButton (var int x, var int y) -> FOREVER
do
    var Rect rect = val Rect(x,y, 38,60);

    var& IRectComponent component;
    spawn RectComponent(&rect) -> (&component);

    spawn do
        loop do
            var bool from_out = true;
            do
                spawn Sprite_from_name(&rect, "core/buttons/hbuttonbgb", false);
                par/or do
                    await outer.main.go_pause_toggle until from_out;
                with
                    await component.on_primary_button_pressed;
                    from_out = false;
                    emit outer.main.go_pause_toggle;
                end
            end
            do
                spawn Sprite_from_name(&rect, "core/buttons/hbuttonbg", false);
                from_out = true;
                par/or do
                    await outer.main.go_pause_toggle until from_out;
                with
                    await component.on_primary_button_pressed;
                    from_out = false;
                    emit outer.main.go_pause_toggle;
                end
            end
        end
    end

    spawn Sprite_from_name(&rect, "core/buttons/pause", false);
    await FOREVER;
end

#endif
