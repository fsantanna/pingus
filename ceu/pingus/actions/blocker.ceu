#ifndef _BLOCKER_CEU
#define _BLOCKER_CEU

#include "../right_left_sprites.ceu"

class Blocker with
    interface IPinguAction;
do
    function (void)=>bool standing_on_ground;
    function (IPingu&& target)=>void catch_pingu;

    var char[] left  = [] .. "pingus/player"
                          .. (_char&&)this.pingu.get_owner_str().c_str()
                          .. "/blocker/left";
    var char[] right = [] .. "pingus/player"
                          .. (_char&&)this.pingu.get_owner_str().c_str()
                          .. "/blocker/right";
    var RightLeftSprites _ with
        this.parent = &outer.pingu;
        this.left   = &left;
        this.right  = &right;
    end;

    /* UPDATE */
    loop do
        await WORLD_UPDATE;
        if not this.standing_on_ground() then
            escape {ActionName::FALLER};
        end

        // FIXME: PinguHolder iterations should be handled otherwise
        loop p in this.pingus do
            this.catch_pingu(p);
        end
    end

    /* PRIVATE */

    function (void)=>bool standing_on_ground do
        return (this.pingu.rel_getpixel(0,-1) != {Groundtype::GP_NOTHING});
    end

    function (IPingu&& target)=>void catch_pingu do
        if (target != &&this.pingu) then // avoid 'self' catch
            if ( target:get_x() > this.pingu.get_x()-16
            and  target:get_x() < this.pingu.get_x()+16
            and  target:get_y() > this.pingu.get_y()-32
            and  target:get_y() < this.pingu.get_y()+5 )
            then
                if (target:get_x() > this.pingu.get_x()) then
                    target:direction = _RIGHT;
                else
                    target:direction = _LEFT;
                end
            end
        end
    end
end

#endif
