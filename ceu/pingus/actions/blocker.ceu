#ifndef _BLOCKER_CEU
#define _BLOCKER_CEU

native/pre do
    ##include "../src/pingus/pingu_holder.hpp"
    ##include "../src/pingus/world.hpp"
    ##include "../src/pingus/pingu.hpp"
    ##include "../src/pingus/pingu_action.hpp"
    ##include "../src/pingus/actions/blocker.hpp"
    ##define Actions__Blocker Actions::Blocker
end
native @plain _Actions__Blocker;

input (_Actions__Blocker&&) BLOCKER_UPDATE;

class Blocker with
    var _Actions__Blocker& me;
do
    loop do
        AWAIT_UNTIL_MYSELF(_Actions__Blocker,BLOCKER_UPDATE);
        if not me.standing_on_ground() then
            escape {ActionName::FALLER};
        end

        // FIXME: PinguHolder iterations should be handled otherwise
        {
            /// XXX_CPP
            static PinguHolder* pingus = WorldObj::get_world()->get_pingus();
            for(PinguIter i = pingus->begin(); i != pingus->end(); ++i)
                ((CEU_Blocker*)_STK_ORG)->me->catch_pingu(*i);
        };
        me.sprite.update();
    end
end

#endif
