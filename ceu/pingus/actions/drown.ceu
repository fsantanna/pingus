#ifndef _DROWN_CEU
#define _DROWN_CEU

#include "../pingu_action.ceu"
#include "../right_left_sprites.ceu"

input (_PinguAction&&) PINGUACTION_UPDATE;

class Drown with
    var _PinguAction& me;
do
    var RightLeftSprites sprites with
        this.left = _XXX_PTR2REF((char&&){("pingus/player"
                                    + ME(CEU_Walker)->pingu->get_owner_str()
                                    + "/drownfall/left")}.c_str());
        this.right = _XXX_PTR2REF((char&&){("pingus/player"
                                    + ME(CEU_Walker)->pingu->get_owner_str()
                                    + "/drownfall/right")}.c_str());
    end;

    par do
        every (me_,gc) in PINGUACTION_DRAW do
            if me_ != &&this.me then
                continue;
            end
            _GC_COLOR_DRAW(gc, sprites.get(me.pingu:direction).me,
                               me.pingu:get_pos());
        end
    with
        loop do
            AWAIT_UNTIL_MYSELF(_PinguAction,PINGUACTION_UPDATE);
            sprites.get(me.pingu:direction).me.update();
            if sprites.get(me.pingu:direction).me.is_finished() then
                me.pingu:set_status({Pingu::PS_DEAD});
                escape {ActionName::DEAD};
            end
        end
    end
end

#endif
