#ifndef _JUMPER_CEU
#define _JUMPER_CEU

#include "../pingu_action.ceu"
#include "../right_left_sprites.ceu"

class Jumper with
    interface IPinguAction;
do
    var char[] left  = [] .. "pingus/player"
                          .. (char&&)*this.pingu.me.get_owner_str().c_str()
                          .. "/jumper/left";
    var char[] right = [] .. "pingus/player"
                          .. (char&&)*this.pingu.me.get_owner_str().c_str()
                          .. "/jumper/right";
    var RightLeftSprites sprites with
        this.left  = &left;
        this.right = &right;
    end;

    par do
        every (me_,gc) in PINGU_DRAW do
            if me_ != &&this.pingu.me then
                continue;
            end
            _GC_COLOR_DRAW(gc, sprites.get(this.pingu.me.direction).me,
                               this.pingu.me.get_pos());
        end
    with
        AWAIT_UNTIL_PINGU(PINGU_UPDATE);

        // if climber, do a wall-jump, else just jump forward
        if me.pingu:get_previous_action() == {ActionName::CLIMBER} then
            me.pingu:direction.change();
        end

        if me.pingu:direction.is_left() then
            me.pingu:set_velocity(me.pingu:get_velocity() +
                                  _Vector3f(-4.58, -4.58));
        else
            // if (me.pingu:direction.is_right())
            me.pingu:set_velocity(me.pingu:get_velocity() +
                                  _Vector3f(4.58, -4.58));
        end

        // Move the me.pingu:n the air, so that it can start 'falling'
        me.pingu:set_y(me.pingu:get_y() - 1);

        escape {ActionName::FALLER};
    end

    /* PUBLIC */

    function (_ActionName__Enum action_name) => bool change_allowed do
        return true;
    end
end

#endif
