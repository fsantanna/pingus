#ifdef _RIGHT_LEFT_SPRITES_CEU
#error multiple include
#else
#define _RIGHT_LEFT_SPRITES_CEU

// TODO: get by ref

#if 0
    /* PUBLIC */

    function (void)=>Sprite&& get do
        loop s in sprites do
            return s;
        end
        _assert(0);
    end
#endif

code/await RightLeftSprites (var&      Rect rect,
                             var&      s8   direction,
                             vector&[] byte left,
                             vector&[] byte right,
                             var       bool is_world)
                                -> (pool[1] Sprite_from_name sprites)
                                    -> void
do
    vector[] byte none;     // TODO: always empty?
    event void e_change;

    //pool[1] Sprite_from_name sprites;

    par do
        var s8 dir = direction;
        every SDL_DT do
            if direction != dir then
                dir = direction;
                emit e_change;
            end
        end
    with
        loop do
            par/or do
                var _char_const_ptr name = do
                    if direction == {NONE} then
                        escape &&none[0] as _char_const_ptr;
                    else/if direction == {LEFT} then
                        escape &&left[0] as _char_const_ptr;
                    else
                        escape &&right[0] as _char_const_ptr;
                    end
                end;
                spawn Sprite_from_name(&rect, name, is_world) in sprites;
                await FOREVER;
            with
                await e_change;
                var&? Sprite_from_name s;
                loop s in sprites do
                    kill s;
                end
            end
        end
    end
end

#endif
