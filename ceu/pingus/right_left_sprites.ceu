#ifndef _RIGHT_LEFT_SPRITES_CEU
#define _RIGHT_LEFT_SPRITES_CEU

class RightLeftSprites with
    var IPingu& pingu;
    var char[]& left;
    var char[]& right;
    pool SpritePingu[1] sprites;
    function (void)=>SpritePingu&& get;
do
    event void e_change;
    par do
        var int dir = this.pingu.me.direction;
        every PINGUHOLDER_UPDATE do
            if this.pingu.me.direction != dir then
                dir = this.pingu.me.direction;
                emit e_change;
            end
        end
    with
        loop do
            var SpritePingu&&? sprite =
                spawn SpritePingu in this.sprites with
                    this.x = &_XXX_NOHOLD(&&outer.pingu.me.pos_x);
                    this.y = &_XXX_NOHOLD(&&outer.pingu.me.pos_y);
                    if outer.pingu.me.direction == {Direction::LEFT} then
                        this.name  = _XXX_PURE(&&outer.left);
                    else
                        this.name  = _XXX_PURE(&&outer.right);
                    end;
                end;
            await e_change;
            kill *sprite!;
        end
    end

    /* PUBLIC */

    function (void)=>SpritePingu&& get do
        loop s in this.sprites do
            return s;
        end
        _assert(0);
    end
end

#endif
