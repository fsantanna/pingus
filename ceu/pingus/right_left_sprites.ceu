#ifdef _RIGHT_LEFT_SPRITES_CEU
#error multiple include
#else
#define _RIGHT_LEFT_SPRITES_CEU

// TODO: get by ref

#if 0
    /* PUBLIC */

    function (void)=>Sprite&& get do
        loop s in sprites do
            return s;
        end
        _assert(0);
    end
#endif

code/await RightLeftSprites (var&      IRRect   rect,
                             var&      s8       direction,
                             vector&[] byte     none,
                             vector&[] byte     left,
                             vector&[] byte     right)
                                 -> (pool[1] Sprite_from_name sprites)
                                     -> void
do
    event void e_change;

    //pool[1] Sprite_from_name sprites;

    par do
        var s8 dir = direction;
        every outer.main.dt do
            if direction != dir then
                dir = direction;
                emit e_change;
            end
        end
    with
        loop do
            var _char_const_ptr name = do
                if direction == {NONE} then
                    escape &&none[0] as _char_const_ptr;
                else/if direction == {LEFT} then
                    escape &&left[0] as _char_const_ptr;
                else
                    escape &&right[0] as _char_const_ptr;
                end
            end;
            var&? Sprite_from_name s =
                spawn Sprite_from_name(&rect, name, &outer.main.dt, &outer.main.redraw) in sprites;

            par/or do
                await s;
                escape;
            with
                await e_change;
            end
            kill s;
        end
    end
end

#endif
