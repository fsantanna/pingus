code/await RectComponent (var& IRRect rect) -> (var IRectComponent component) -> FOREVER do
    component = _;
    code/tight/recursive Rect_is_at (var int x, var int y) -> bool do
        escape outer.rect.abs.x<=x and x<=outer.rect.abs.x+outer.rect.abs.w and outer.rect.abs.y<=y and y<=outer.rect.abs.y+outer.rect.abs.h;
    end
    par do
        loop do
            (x,y) = await ON_PRIMARY_BUTTON_PRESSED until call/recursive Rect_is_at(x,y);
            emit component.on_primary_button_pressed(x,y);
            (x,y) = await ON_PRIMARY_BUTTON_RELEASED;
            if call/recursive Rect_is_at(x,y) then
                emit component.on_click;
            end
            emit component.on_primary_button_released(x,y);
        end
    with
        var bool is_on = false;
        var int x;
        var int y;
        every (x,y) in ON_POINTER_MOVE do
            if call/recursive Rect_is_at(x,y) != is_on then
                is_on = not is_on;
                if is_on then
                    emit component.on_pointer_enter;
                else
                    emit component.on_pointer_leave;
                end
            end
        end
    end
end
